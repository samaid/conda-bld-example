name: Build-test-upload package

on:
  push:
    branches:
      - main
  pull_request:

env:
  PACKAGE_NAME: demo_pkg
  MODULE_NAME: demo_module
  RUN_TYPE: quick_run  # Set to full_run to run full matrix

jobs:
  build_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Build conda package
        run: |
          CHANNELS="-c intel -c conda-forge -c plotly --override-channels"
          VERSIONS="--python ${{ matrix.python }}"
          TEST=""
          conda build $TEST $VERSIONS $CHANNELS conda-recipe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }}
          path: /usr/share/miniconda/conda-bld/linux-64/${{ env.PACKAGE_NAME }}-*.tar.bz2
          